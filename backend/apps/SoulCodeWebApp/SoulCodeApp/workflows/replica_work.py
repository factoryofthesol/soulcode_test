# -*- coding: utf-8 -*-
"""Replica_work.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vBimOHj1Zj_8p6eyQXEaK6QJLp2uXxki
"""





!pip install replicate

!pip install prefect

import os
import replicate
from prefect import task
from getpass import getpass

REPLICATE_API_TOKEN = getpass()
os.environ["REPLICATE_API_TOKEN"] = REPLICATE_API_TOKEN

from prefect import task, Flow, flow
import replicate

# Task to interact with the Replicate API
@task
def run_replicate_model(input_data):
    model_id = "deforum-art/deforum-stable-diffusion:1a98303504c7d866d2b198bae0b03237eab82edc1491a5306895d12b0021d6f6"
    model_input = {"inputs": input_data}
    model_output = replicate.run(model_id, input=model_input)
    return model_output

# Task to process input data
@task
def process_input(input_data):
    tool, value = input_data.split("#")
    return f"Processed {tool}: {value}"

# Defining flow
@flow
def my_flow():
    inputs = ["GI#1", "CA#2", "RF#0", "GO#0"]
    processed_results = process_input.map(inputs)

    # Call Replicate task for each processed result
    replicate_outputs = run_replicate_model.map(processed_results)

    for result, replicate_output in zip(processed_results, replicate_outputs):
        print(result)
        print("Replicate Output:", replicate_output)

# Initialize the flow
flow_instance = my_flow()

# Execute the flow
my_flow.run()



REPLICATE_API_TOKEN = getpass()
os.environ["REPLICATE_API_TOKEN"] = REPLICATE_API_TOKEN

model_id = "deforum-art/deforum-stable-diffusion"
model = replicate.models.get(model_id)
versions = model.versions.list()

for version in versions:
    print("Version:", version.id)
    print("ID:", version.id)
    print("Created:", version.created_at)
    print("=" * 30)

