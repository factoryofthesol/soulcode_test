[tool.poetry]
name = "vessel"
version = "0.0.1"
description = "Prefect Starter"
authors = [ "whatisaghostwriter <sunracarrera@gmail.com>" ]
license = "MIT"
readme = "README.md"
  [[tool.poetry.packages]]
  include = "backend"

  [tool.poetry.dependencies]
  python = ">=3.10,<3.12"
  argon2-cffi = "^21.3.0"
  attrs = "23.1.0"
  celery = "^5.2.7"
  crispy-bootstrap4 = "^2022.1"
  dj-database-url = "^2.0.0"
  dj-rest-auth = "^4.0.1"
  django = "4.2.4"
  django-allauth = "^0.54.0"
  django-bootstrap4 = "^23.1"
  django-celery-beat = "^2.5.0"
  django-celery-results = "^2.5.1"
  django-cors-headers = "4.2.0"
  django-crispy-forms = "^2.0"
  django-environ = "^0.10.0"
  django-model-utils = "^4.3.1"
  django-redis = "^5.2.0"
  djangorestframework = "^3.14.0"
  drf-spectacular = "^0.26.2"
  flower = "^1.2.0"
  gunicorn = "^20.1.0"
  hiredis = "^2.2.2"
  marvin = "^1.3.0"
  pillow = "^9.5.0"
  prefect = "2.11.3"
  psycopg2 = "^2.9.6"
  python-slugify = "^8.0.1"
  redis = "^4.5.5"
  replicate = "^0.8.1"
  whitenoise = "^6.4.0"
  
    [tool.poetry.dependencies.uvicorn]
    extras = [ "standard" ]
    version = "^0.22.0"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
django-debug-toolbar = "^4.1.0"
django-extensions = "^3.2.3"
flake8 = "^6.0.0"
flake8-isort = "^6.0.0"
ipdb = "^0.13.13"
myst-parser = "^2.0.0"
pre-commit = "^3.3.2"
pylint-django = "^2.5.3"
pylint-celery = "^0.3"
pyyaml = "^6.0.1"
sphinx = "^6.2.1"
sphinx-autobuild = "^2021.3.14"
watchfiles = "^0.19.0"

  [tool.poetry.group.dev.dependencies.werkzeug]
  extras = [ "watchdog" ]
  version = "^2.3.4"

[tool.poetry.group.test.dependencies]
coverage = "^7.2.7"
django-coverage-plugin = "^3.0.0"
django-stubs = "^4.2.1"
factory-boy = "^3.2.1"
mypy = "^1.3.0"
psycopg2-binary = "^2.9.6"
pytest = "^7.3.1"
pytest-django = "^4.5.2"
pytest-sugar = "^0.9.7"
pytest-mock = "*"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ds=config.settings.test --reuse-db"
python_files = [ "tests.py", "test_*.py" ]

[tool.coverage.run]
include = [ "backend/**" ]
omit = [ "*/migrations/*", "*/tests/*" ]
plugins = [ "django_coverage_plugin" ]

[tool.black]
line-length = 119
target-version = [ "py311" ]

[tool.isort]
profile = "black"
line_length = 119
known_first_party = [ "apps", "config" ]
skip = [ "venv/" ]
skip_glob = [ "**/migrations/*.py" ]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = [ "mypy_django_plugin.main", "mypy_drf_plugin.main" ]

  [[tool.mypy.overrides]]
  module = "*.migrations.*"
  ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"

[tool.pylint.MASTER]
load-plugins = [ "pylint_django", "pylint_celery" ]
django-settings-module = "config.settings.local"

[tool.pylint.FORMAT]
max-line-length = 119

[tool.pylint."MESSAGES CONTROL"]
disable = [ "missing-docstring", "invalid-name" ]

[tool.pylint.DESIGN]
max-parents = 13

[tool.pylint.TYPECHECK]
generated-members = [
  "REQUEST",
  "acl_users",
  "aq_parent",
  "[a-zA-Z]+_set{1,2}",
  "save",
  "delete"
]

[tool.semantic_release]
version_variable = [
    'backend/__init__.py:__version__',
    'backend/docs/conf.py:version',
]

[build-system]
requires = [ "poetry-core==1.1.0" ]
build-backend = "poetry.core.masonry.api"
